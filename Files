
# TemplateGuard

A radiologist tool to transition PowerScribe templates into MosaicOS with ease.

## Features
- Template uploader with metadata tagging
- Cloud storage on Supabase
- Chrome extension with floating UI
- Priming phrase generator
- Shift summary analytics

## Setup
- Deploy frontend to Vercel or Netlify
- Supabase: import schema.sql
- Chrome Extension: load `/public` folder via `chrome://extensions`

MIT License
import React from 'react';
// Upload logic placeholder
import React from 'react';
// Phrase converter logic placeholder

import React, { useEffect, useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';

export default function DashboardPreview() {
  const [usage, setUsage] = useState(null);

  useEffect(() => {
    fetch('/api/mock-usage')
      .then(res => res.json())
      .then(data => setUsage(data));
  }, []);

  if (!usage) return <p className="text-center p-6">Loading dashboard preview...</p>;

  return (
    <div className="max-w-3xl mx-auto p-6 space-y-4">
      <h2 className="text-2xl font-bold">ðŸ“Š TemplateGuard Usage Summary</h2>
      <Card>
        <CardContent className="space-y-2 p-4">
          <p><strong>Templates Used:</strong> {usage.templatesUsed}</p>
          <p><strong>Phrases Favorited:</strong> {usage.favorites}</p>
          <p><strong>Estimated Time Saved:</strong> {usage.minutesSaved} minutes</p>
          <p><strong>Most Used Tags:</strong> {usage.topTags.join(', ')}</p>
          <p><strong>Reports With vs Without Tool:</strong></p>
          <ul className="list-disc list-inside">
            <li><strong>With Tool:</strong> {usage.reportsWithTool}</li>
            <li><strong>Without Tool:</strong> {usage.reportsWithoutTool}</li>
          </ul>
        </CardContent>
      </Card>
      <Button className="w-full">ðŸ“¥ Download Shift Report</Button>
    </div>
  );
<!DOCTYPE html><html><body><h1>TemplateGuard Popup</h1></body></html>
{
  "manifest_version": 3,
  "name": "TemplateGuard",
  "version": "1.0",
  "action": {
    "default_popup": "index.html"
  },
  "permissions": ["storage"],
  "background": {
    "service_worker": "background.js"
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "js": ["content.js"]
    }
  ]
}
// Floating UI content script placeholder
}
-- Template metadata
create table template_metadata (
  id uuid default uuid_generate_v4() primary key,
  user_id uuid references auth.users(id),
  filename text,
  specialty text,
  modality text,
  region text,
  protocol text,
  keywords text,
  tags text[],
  priming_phrase text,
  is_favorite boolean default false,
  inserted_at timestamp default now()
);

-- User preferences
create table profiles (
  id uuid primary key references auth.users(id),
  show_history boolean default true,
  show_favorites boolean default true
);

-- Usage tracking
create table usage_log (
  id uuid default uuid_generate_v4() primary key,
  user_id uuid,
  template_id uuid,
  action text,
  timestamp timestamp default now()
);
